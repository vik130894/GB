#Задание 1. 
#Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента. 
#Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.


new_list = [50, "cat", 2, 5.6, True, [2, 3, 5], (1, 4, "dog"),{"data":1, "num":2}]
print(new_list)
for elements in new_list:
    print(type(elements))
    
#Задание 2.
#Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. 
#При нечетном количестве элементов последний сохранить на своем месте. 
#Для заполнения списка элементов необходимо использовать функцию input().

new_list = list(input("Введите значения без пробелов и запятых: "))
print(new_list)
if len(new_list) % 2 == 0:
    i = 0
    while i < len(new_list):
        num = new_list[i]
        new_list[i] = new_list[i+1]
        new_list[i+1] = num
        i += 2
else:
    i = 0
    while i < len(new_list) - 1:
        num = new_list[i]
        new_list[i] = new_list[i + 1]
        new_list[i + 1] = num
        i += 2
print(new_list)

#Задание 3.
#Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
#Напишите решения через list и через dict.

m = int(input("Введите номер месяца: "))
if 1 <= m <= 12:
    season = {1: "winter", 2: "winter", 12: "winter",
              3: "spring", 4: "spring", 5: "spring",
              6: "summer", 7: "summer", 8: "summer",
              9: "autumn", 10: "autumn", 11: "autumn"}
    print(season.get(m))
else: print("Неверный номер месяца")

#Задание 4.
#Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
#Если в слово длинное, выводить только первые 10 букв в слове.

text = input("Введите текст: ").split()
print(text)
for index, value in enumerate(text, 1):
    if len(value) > 10:
        value = value[0:10]
    print(index, value)

#Задание 5
#5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. У пользователя необходимо запрашивать новый элемент рейтинга. 
#Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]

while True:
    try:
        print(my_list)
        number = int(input("Введите число: "))
        a = my_list.count(number)
        if a > 0:
            i = my_list.index(number)
            my_list.insert(i + 1, number)
        else:
            if number > my_list[0]:
                my_list.insert(0, number)
            elif number < my_list[-1]:
                my_list.append(number)
            else:
                for i, value in enumerate(my_list):
                    if value < number:
                        my_list.insert(i, number)
                        break
    except KeyboardInterrupt:
        exit()




